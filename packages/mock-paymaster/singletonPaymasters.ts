import {
    http,
    type Account,
    type Address,
    type Chain,
    type GetContractReturnType,
    type Hex,
    type PublicClient,
    type Transport,
    type WalletClient,
    concat,
    createPublicClient,
    encodePacked,
    getContract,
    getContractAddress,
    getCreate2Address,
    pad,
    parseEther,
    slice,
    toBytes
} from "viem"
import {
    type UserOperation,
    toPackedUserOperation
} from "viem/account-abstraction"
import { foundry } from "viem/chains"
import {
    singletonPaymaster06Abi,
    singletonPaymaster07Abi
} from "./helpers/abi.js"
import { getPublicClient } from "./helpers/utils.js"
import type { PaymasterMode } from "./helpers/utils.js"

const DETERMINISTIC_DEPLOYER = "0x4e59b44847b379578588920ca78fbf26c0b4956c"

const EXCHANGE_RATE = 30_000_000n
const POST_OP_GAS_OVERHEAD = 100_000n

export const getDummyPaymasterData = (
    isV6: boolean,
    paymaster: Address,
    paymasterMode: PaymasterMode
): { paymaster: Address; paymasterData: Hex } | { paymasterAndData: Hex } => {
    let encodedDummyData: Hex

    const validUntil = 0
    const validAfter = 0
    const mode = paymasterMode.mode === "verifying" ? 0 : 1

    if (paymasterMode.mode === "verifying") {
        encodedDummyData = encodePacked(
            [
                "uint8", // mode
                "uint48", // validUntil
                "uint48", // validAfter
                "bytes" // signature
            ],
            [
                mode,
                validUntil,
                validAfter,
                "0xcd91f19f0f19ce862d7bec7b7d9b95457145afc6f639c28fd0360f488937bfa41e6eedcd3a46054fd95fcd0e3ef6b0bc0a615c4d975eef55c8a3517257904d5b1c"
            ]
        )
    } else {
        encodedDummyData = encodePacked(
            [
                "uint8", // mode
                "uint48", // validUntil
                "uint48", // validAfter
                "address", // token
                "uint128", // postOpGasOverhead
                "uint256", // exchangeRate
                "bytes" // signature
            ],
            [
                mode,
                validUntil,
                validAfter,
                paymasterMode.token,
                POST_OP_GAS_OVERHEAD,
                EXCHANGE_RATE,
                "0xcd91f19f0f19ce862d7bec7b7d9b95457145afc6f639c28fd0360f488937bfa41e6eedcd3a46054fd95fcd0e3ef6b0bc0a615c4d975eef55c8a3517257904d5b1c"
            ]
        )
    }

    if (isV6) {
        return {
            paymasterAndData: concat([paymaster, encodedDummyData])
        }
    }

    return {
        paymaster,
        paymasterData: encodedDummyData
    }
}

// Creates the call that deploys the SingletonPaymaster v0.7
const getSingletonPaymaster07CreateCall = (owner: Address): Hex =>
    concat([
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "",
        pad(owner),
        "0x00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001", // couldn't get encodeAbiParameters with type address[] to work
        pad(owner)
    ])

// Creates the call that deploys the SingletonPaymaster v0.6
const getSingletonPaymaster06CreateCall = (owner: Address): Hex =>
    concat([
        "0x0000000000000000000000000000000000000000000000000000000000000000",
        "0x610140604052600060a052600160c052605060e052600c6101005260146101205234801561002c57600080fd5b5060405161270838038061270883398101604081905261004b916101a4565b828282808383806001600160a01b03811661008057604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61008981610122565b50506001600160a01b031660805260005b81518110156100f45760018060008484815181106100ba576100ba610297565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161009a565b5050600280546001600160a01b0319166001600160a01b039390931692909217909155506102ad9350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461018957600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156101b957600080fd5b6101c284610172565b92506101d060208501610172565b60408501519092506001600160401b038111156101ec57600080fd5b8401601f810186136101fd57600080fd5b80516001600160401b038111156102165761021661018e565b604051600582901b90603f8201601f191681016001600160401b03811182821017156102445761024461018e565b60405291825260208184018101929081018984111561026257600080fd5b6020850194505b838510156102885761027a85610172565b815260209485019401610269565b50809450505050509250925092565b634e487b7160e01b600052603260045260246000fd5b60805160a05160c05160e051610100516101205161239561037360003960008181610e980152610fc70152600081816108da01526114f501526000818161090e0152611691015260008181610d7801528181610ff3015281816110c901526114450152600081816108a9015281816110240152818161108a0152818161129b01526113870152600081816102d501528181610433015281816105880152818161064101528181610708015281816107980152818161084b0152610bd201526123956000f3fe6080604052600436106101445760003560e01c8063b0d691fe116100c0578063dd16f84711610074578063f0f4426011610059578063f0f4426014610389578063f2fde38b146103a9578063f465c77e146103c957600080fd5b8063dd16f84714610349578063eb12d61e1461036957600080fd5b8063c23a5cea116100a5578063c23a5cea1461030c578063c399ec881461032c578063d0e30db01461034157600080fd5b8063b0d691fe146102c3578063bb9fe6bf146102f757600080fd5b806361d027b311610117578063736c0d5b116100fc578063736c0d5b146102385780638da5cb5b14610278578063a9a23409146102a357600080fd5b806361d027b3146101d1578063715018a61461022357600080fd5b80630396cb60146101495780630e316ab71461015e578063205c28781461017e5780635525dcfb1461019e575b600080fd5b61015c610157366004611c95565b6103f7565b005b34801561016a57600080fd5b5061015c610179366004611ced565b6104a9565b34801561018a57600080fd5b5061015c610199366004611d0a565b610534565b3480156101aa57600080fd5b506101be6101b9366004611d36565b6105cc565b6040519081526020015b60405180910390f35b3480156101dd57600080fd5b506002546101fe9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c8565b34801561022f57600080fd5b5061015c610609565b34801561024457600080fd5b50610268610253366004611ced565b60016020526000908152604090205460ff1681565b60405190151581526020016101c8565b34801561028457600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101fe565b3480156102af57600080fd5b5061015c6102be366004611d68565b61061d565b3480156102cf57600080fd5b506101fe7f000000000000000000000000000000000000000000000000000000000000000081565b34801561030357600080fd5b5061015c610637565b34801561031857600080fd5b5061015c610327366004611ced565b6106bb565b34801561033857600080fd5b506101be610767565b61015c61081d565b34801561035557600080fd5b506101be610364366004611e13565b6108a5565b34801561037557600080fd5b5061015c610384366004611ced565b61093b565b34801561039557600080fd5b5061015c6103a4366004611ced565b6109c3565b3480156103b557600080fd5b5061015c6103c4366004611ced565b610a66565b3480156103d557600080fd5b506103e96103e4366004611e69565b610acf565b6040516101c8929190611eb7565b6103ff610af2565b6040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690630396cb609034906024016000604051808303818588803b15801561048d57600080fd5b505af11580156104a1573d6000803e3d6000fd5b505050505050565b6104b1610af2565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b91015b60405180910390a150565b61053c610af2565b6040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561048d57600080fd5b6000670de0b6b3a7640000826105e28587611f59565b6105ec9088611f70565b6105f69190611f59565b6106009190611f83565b95945050505050565b610611610af2565b61061b6000610b45565b565b610625610bba565b61063184848484610c59565b50505050565b61063f610af2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106a757600080fd5b505af1158015610631573d6000803e3d6000fd5b6106c3610af2565b6040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561074c57600080fd5b505af1158015610760573d6000803e3d6000fd5b5050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190611fbe565b905090565b6040517fb760faf90000000000000000000000000000000000000000000000000000000081523060048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063b760faf99034906024016000604051808303818588803b15801561074c57600080fd5b60007f000000000000000000000000000000000000000000000000000000000000000060ff168360ff160361090857610901827f000000000000000000000000000000000000000000000000000000000000000060ff16610e08565b9050610935565b610901827f000000000000000000000000000000000000000000000000000000000000000060ff16610e08565b92915050565b610943610af2565b73ffffffffffffffffffffffffffffffffffffffff811660008181526001602081815260409283902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690921790915590519182527f47d1c22a25bb3a5d4e481b9b1e6944c2eade3181a0a20b495ed61d35b5323f249101610529565b6109cb610af2565b6002546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a910160405180910390a1600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b610a6e610af2565b73ffffffffffffffffffffffffffffffffffffffff8116610ac3576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b610acc81610b45565b50565b60606000610adb610bba565b610ae6858585610fad565b91509150935093915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461061b576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610aba565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461061b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152606401610aba565b6000806000806000806000610c6e8a8a611115565b96509650965096509650965096506000818303610c8c575081610ca2565b610c9f83610c9a4885611f70565b61116a565b90505b6000610cc28a876fffffffffffffffffffffffffffffffff16848a6105cc565b905060028d6002811115610cd857610cd8611fd7565b14610df957600254600090610d07908a908c9073ffffffffffffffffffffffffffffffffffffffff1685611182565b905080610d70576040517f1db0f4fb00000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610aba565b6040805160ff7f000000000000000000000000000000000000000000000000000000000000000016815273ffffffffffffffffffffffffffffffffffffffff8b81166020830152918101849052606081018a9052908b169087907f7a270f29ae17e8e2304ff1245deb50c3b6206bca82928d904f3e284d35c5ffd29060800160405180910390a3505b50505050505050505050505050565b600080610e186020850185611ced565b6020850135608086013560a087013560c088013560e08901356101008a0135610e4460608c018c612006565b604051610e52929190612072565b60405180910390208b8060400190610e6a9190612006565b604051610e78929190612072565b604051908190039020610e8f6101208e018e612006565b600090610ebc8f7f0000000000000000000000000000000000000000000000000000000000000000611f70565b92610ec993929190612082565b604051610ed7929190612072565b6040805191829003822073ffffffffffffffffffffffffffffffffffffffff909b1660208301528101989098526060880196909652608087019490945260a086019290925260c085015260e084015261010083015261012082015261014081019190915261016001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120908301819052469183019190915230606083015291506080016040516020818303038152906040528051906020012091505092915050565b60606000803681610feb610fc56101208a018a612006565b7f00000000000000000000000000000000000000000000000000000000000000006111d5565b9250925092507f000000000000000000000000000000000000000000000000000000000000000060ff168360ff161415801561104d57507f000000000000000000000000000000000000000000000000000000000000000060ff168360ff1614155b15611084576040517f654a4f2900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606060007f000000000000000000000000000000000000000000000000000000000000000060ff168560ff16036110c7576110c18a85858c611275565b90925090505b7f000000000000000000000000000000000000000000000000000000000000000060ff168560ff1603611106576111008a85858c61142a565b90925090505b90999098509650505050505050565b60008080808080808061112a898b018b6120cc565b9050806000015181602001518260400151836060015184608001518560a001518660c0015197509750975097509750975097505092959891949750929550565b6000818310611179578161117b565b825b9392505050565b600060405182606052836040528460601b602c526f23b872dd000000000000000000000000600c52602060006064601c60008a5af13d156001600051141716915060006060528060405250949350505050565b600036816111e4846001611f70565b85101561121d576040517fcc32193e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600086858761122d826001611f70565b9261123a93929190612082565b6112439161218e565b60f81c90503660008888611258896001611f70565b611263928290612082565b939a9099509297509195505050505050565b6060600080600036600061128989896114ec565b935093509350935060006112f36112c07f00000000000000000000000000000000000000000000000000000000000000008d6108a5565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b905060006113378285858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115f792505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081205491925060ff9091169061137282158989611621565b905061138160208f018f611ced565b604080517f000000000000000000000000000000000000000000000000000000000000000060ff1681526000602082018190528183018190526060820152905173ffffffffffffffffffffffffffffffffffffffff92909216918d917f7a270f29ae17e8e2304ff1245deb50c3b6206bca82928d904f3e284d35c5ffd2919081900360800190a36040805160208101909152600081529e909d509b505050505050505050505050565b60606000806114398686611659565b9050600061146a6112c07f00000000000000000000000000000000000000000000000000000000000000008a6108a5565b9050600061147c828460a001516115f7565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260016020908152604082205486519187015193945060ff16926114bd91841591611621565b905060006114da8c8760600151886080015189604001518d61190b565b9c919b50909950505050505050505050565b600080368160ff7f00000000000000000000000000000000000000000000000000000000000000001685101561154e576040517ff96ce32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061155d600682888a612082565b611566916121f4565b60d01c9050600061157b600c6006898b612082565b611584916121f4565b60d01c905036600061159989600c818d612082565b9092509050604081148015906115b0575060418114155b156115e7576040517ff95eeeac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9299919850965090945092505050565b6000806000806116078686611a46565b9250925092506116178282611a93565b5090949350505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561164957600061164c565b60015b60ff161717949350505050565b6040805160c0810182526000808252602082018190529181018290526060808201839052608082019290925260a081019190915260ff7f0000000000000000000000000000000000000000000000000000000000000000168210156116ea576040517ff96ce32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006116f96006828587612082565b611702916121f4565b60d01c90506000611717600c60068688612082565b611720916121f4565b60d01c905060006117356020600c8789612082565b61173e91612259565b60601c9050600061175360306020888a612082565b61175c916122be565b60801c9050600061177160506030898b612082565b61177a91612323565b905036600061178c896050818d612082565b909250905073ffffffffffffffffffffffffffffffffffffffff85166117de576040517f33c1dac900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82600003611818576040517f5b33c69600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040811480159061182a575060418114155b15611861576040517ff95eeeac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060c001604052808965ffffffffffff1681526020018865ffffffffffff168152602001866fffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509152509b9a5050505050505050505050565b6040805160e08101909152606090806119276020890189611ced565b73ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001846fffffffffffffffffffffffffffffffff1681526020018381526020018760e001358152602001876101000135815250604051602001611a2c9190600060e08201905073ffffffffffffffffffffffffffffffffffffffff835116825273ffffffffffffffffffffffffffffffffffffffff6020840151166020830152604083015160408301526fffffffffffffffffffffffffffffffff60608401511660608301526080830151608083015260a083015160a083015260c083015160c083015292915050565b604051602081830303815290604052905095945050505050565b60008060008351604103611a805760208401516040850151606086015160001a611a7288828585611b9b565b955095509550505050611a8c565b50508151600091506002905b9250925092565b6000826003811115611aa757611aa7611fd7565b03611ab0575050565b6001826003811115611ac457611ac4611fd7565b03611afb576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611b0f57611b0f611fd7565b03611b49576040517ffce698f700000000000000000000000000000000000000000000000000000000815260048101829052602401610aba565b6003826003811115611b5d57611b5d611fd7565b03611b97576040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260048101829052602401610aba565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611bd65750600091506003905082611c8b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611c2a573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611c8157506000925060019150829050611c8b565b9250600091508190505b9450945094915050565b600060208284031215611ca757600080fd5b813563ffffffff8116811461117b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610acc57600080fd5b8035611ce881611cbb565b919050565b600060208284031215611cff57600080fd5b813561117b81611cbb565b60008060408385031215611d1d57600080fd5b8235611d2881611cbb565b946020939093013593505050565b60008060008060808587031215611d4c57600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060608587031215611d7e57600080fd5b843560038110611d8d57600080fd5b9350602085013567ffffffffffffffff811115611da957600080fd5b8501601f81018713611dba57600080fd5b803567ffffffffffffffff811115611dd157600080fd5b876020828401011115611de357600080fd5b949760209190910196509394604001359392505050565b60006101608284031215611e0d57600080fd5b50919050565b60008060408385031215611e2657600080fd5b823560ff81168114611e3757600080fd5b9150602083013567ffffffffffffffff811115611e5357600080fd5b611e5f85828601611dfa565b9150509250929050565b600080600060608486031215611e7e57600080fd5b833567ffffffffffffffff811115611e9557600080fd5b611ea186828701611dfa565b9660208601359650604090950135949350505050565b604081526000835180604084015260005b81811015611ee55760208187018101516060868401015201611ec8565b5060006060828501015260607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168401019150508260208301529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808202811582820484141761093557610935611f2a565b8082018082111561093557610935611f2a565b600082611fb9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611fd057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261203b57600080fd5b83018035915067ffffffffffffffff82111561205657600080fd5b60200191503681900382131561206b57600080fd5b9250929050565b8183823760009101908152919050565b6000808585111561209257600080fd5b8386111561209f57600080fd5b5050820193919092039150565b80356fffffffffffffffffffffffffffffffff81168114611ce857600080fd5b600060e08284031280156120df57600080fd5b6000905060405160e0810181811067ffffffffffffffff8211171561212b577f4e487b710000000000000000000000000000000000000000000000000000000083526041600452602483fd5b60405261213784611cdd565b815261214560208501611cdd565b602082015260408481013590820152612160606085016120ac565b60608201526080848101359082015260a0808501359082015260c09384013593810193909352509092915050565b80357fff0000000000000000000000000000000000000000000000000000000000000081169060018410156121ed577fff00000000000000000000000000000000000000000000000000000000000000808560010360031b1b82161691505b5092915050565b80357fffffffffffff000000000000000000000000000000000000000000000000000081169060068410156121ed577fffffffffffff0000000000000000000000000000000000000000000000000000808560060360031b1b82161691505092915050565b80357fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081169060148410156121ed577fffffffffffffffffffffffffffffffffffffffff000000000000000000000000808560140360031b1b82161691505092915050565b80357fffffffffffffffffffffffffffffffff0000000000000000000000000000000081169060108410156121ed577fffffffffffffffffffffffffffffffff00000000000000000000000000000000808560100360031b1b82161691505092915050565b80356020831015610935577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b169291505056fea2646970667358221220b198dacaa988aafcb9441005f2a899880d533689da493c4dc98e301d7822f21a64736f6c634300081a00330000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d2789",
        pad(owner),
        "0x00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000001", // couldn't get encodeAbiParameters with type address[] to work
        pad(owner)
    ])

const getSingletonPaymaster06Address = (owner: Address) =>
    getCreate2Address({
        from: DETERMINISTIC_DEPLOYER,
        salt: slice(getSingletonPaymaster06CreateCall(owner), 0, 32),
        bytecode: slice(getSingletonPaymaster06CreateCall(owner), 32)
    })

const getSingletonPaymaster07Address = (owner: Address) =>
    getCreate2Address({
        from: DETERMINISTIC_DEPLOYER,
        salt: slice(getSingletonPaymaster07CreateCall(owner), 0, 32),
        bytecode: slice(getSingletonPaymaster07CreateCall(owner), 32)
    })

export class SingletonPaymasterV07 {
    private anvilRpc: string
    private walletClient: WalletClient<Transport, Chain, Account>
    public singletonPaymaster: GetContractReturnType<
        typeof singletonPaymaster07Abi,
        {
            public: PublicClient<Transport, Chain>
            wallet: WalletClient<Transport, Chain, Account>
        }
    >

    constructor(
        walletClient: WalletClient<Transport, Chain, Account>,
        anvilRpc: string
    ) {
        this.walletClient = walletClient
        this.singletonPaymaster = getContract({
            address: getSingletonPaymaster07Address(
                walletClient.account.address
            ),
            abi: singletonPaymaster07Abi,
            client: {
                wallet: walletClient as WalletClient<Transport, Chain, Account>,
                public: getPublicClient(anvilRpc)
            }
        })
        this.anvilRpc = anvilRpc
    }

    public getDummyPaymasterData(paymasterMode: PaymasterMode): {
        paymaster: Address
        paymasterData: Hex
    } {
        return getDummyPaymasterData(
            false,
            this.singletonPaymaster.address,
            paymasterMode
        ) as {
            paymaster: Address
            paymasterData: Hex
        }
    }

    async encodePaymasterData(
        op: UserOperation<"0.7">,
        paymasterMode: PaymasterMode
    ) {
        const validAfter = 0
        const validUntil = Math.floor(Date.now() / 1000) + 60_000

        const mode = paymasterMode.mode === "verifying" ? 0 : 1
        op.paymaster = this.singletonPaymaster.address
        op.paymasterData = encodePacked(
            ["uint8", "uint48", "uint48"],
            [mode, validUntil, validAfter]
        )

        // if ERC-20 mode, add extra ERC-20 fields
        if (paymasterMode.mode === "erc20") {
            op.paymasterData = encodePacked(
                ["bytes", "address", "uint128", "uint256"],
                [
                    op.paymasterData,
                    paymasterMode.token,
                    POST_OP_GAS_OVERHEAD,
                    EXCHANGE_RATE
                ]
            )
        }

        const hash = await this.singletonPaymaster.read.getHash([
            mode,
            toPackedUserOperation(op)
        ])

        const sig = await this.walletClient.signMessage({
            message: { raw: toBytes(hash) }
        })

        return {
            paymaster: this.singletonPaymaster.address,
            paymasterData: encodePacked(
                ["bytes", "bytes"],
                [op.paymasterData, sig]
            )
        }
    }

    async setup() {
        const data = getSingletonPaymaster07CreateCall(
            this.walletClient.account.address
        )

        const publicClient = createPublicClient({
            transport: http(this.anvilRpc),
            chain: foundry
        })

        await this.walletClient
            .sendTransaction({
                to: DETERMINISTIC_DEPLOYER,
                data
            })
            .then((hash) => publicClient.waitForTransactionReceipt({ hash }))

        const address = getContractAddress({
            opcode: "CREATE2",
            from: DETERMINISTIC_DEPLOYER,
            salt: slice(data, 0, 32),
            bytecode: slice(data, 32)
        })

        const singletonPaymaster = getContract({
            address,
            abi: singletonPaymaster07Abi,
            client: this.walletClient
        })

        await singletonPaymaster.write.deposit({
            value: parseEther("50")
        })

        return singletonPaymaster
    }
}

export class SingletonPaymasterV06 {
    private walletClient: WalletClient<Transport, Chain, Account>
    public singletonPaymaster: GetContractReturnType<
        typeof singletonPaymaster06Abi,
        {
            public: PublicClient<Transport, Chain>
            wallet: WalletClient<Transport, Chain, Account>
        }
    >
    private anvilRpc: string

    constructor(
        walletClient: WalletClient<Transport, Chain, Account>,
        anvilRpc: string
    ) {
        this.walletClient = walletClient
        this.singletonPaymaster = getContract({
            address: getSingletonPaymaster06Address(
                walletClient.account.address
            ),
            abi: singletonPaymaster06Abi,
            client: {
                wallet: this.walletClient,
                public: getPublicClient(anvilRpc)
            }
        })
        this.anvilRpc = anvilRpc
    }

    public getDummyPaymasterData(paymasterMode: PaymasterMode): {
        paymasterAndData: Hex
    } {
        return getDummyPaymasterData(
            true,
            this.singletonPaymaster.address,
            paymasterMode
        ) as {
            paymasterAndData: Hex
        }
    }

    async encodePaymasterData(
        op: UserOperation<"0.6">,
        paymasterMode: PaymasterMode
    ) {
        const validAfter = 0
        const validUntil = Math.floor(Date.now() / 1000) + 60_000
        const mode = paymasterMode.mode === "verifying" ? 0 : 1
        op.paymasterAndData = encodePacked(
            ["address", "uint8", "uint48", "uint48"],
            [this.singletonPaymaster.address, mode, validUntil, validAfter]
        )

        if (paymasterMode.mode === "erc20") {
            op.paymasterAndData = encodePacked(
                ["bytes", "address", "uint128", "uint256"],
                [
                    op.paymasterAndData,
                    paymasterMode.token,
                    POST_OP_GAS_OVERHEAD,
                    EXCHANGE_RATE
                ]
            )
        }

        const hash = await this.singletonPaymaster.read.getHash([
            mode,
            {
                ...op,
                initCode: op.initCode || "0x",
                paymasterAndData: op.paymasterAndData || "0x"
            }
        ])
        const sig = await this.walletClient.signMessage({
            message: { raw: hash }
        })

        return {
            paymasterAndData: encodePacked(
                ["bytes", "bytes"],
                [op.paymasterAndData, sig]
            )
        }
    }

    async setup() {
        const data = getSingletonPaymaster06CreateCall(
            this.walletClient.account.address
        )

        const publicClient = createPublicClient({
            transport: http(this.anvilRpc),
            chain: foundry
        })

        await this.walletClient
            .sendTransaction({
                to: DETERMINISTIC_DEPLOYER,
                data
            })
            .then((hash) => publicClient.waitForTransactionReceipt({ hash }))

        const address = getContractAddress({
            opcode: "CREATE2",
            from: DETERMINISTIC_DEPLOYER,
            salt: slice(data, 0, 32),
            bytecode: slice(data, 32)
        })

        const singletonPaymaster = getContract({
            address,
            abi: singletonPaymaster06Abi,
            client: this.walletClient
        })

        await singletonPaymaster.write.deposit({
            value: parseEther("50")
        })

        return singletonPaymaster
    }
}
